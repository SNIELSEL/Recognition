//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Script/Controller/PlayerControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControlls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControlls"",
    ""maps"": [
        {
            ""name"": ""Deafult Movement"",
            ""id"": ""1002f397-98b9-48fe-87ba-12fbb4d6b2ac"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a8603a35-608f-458f-a93a-10414996f1f1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""140e4e71-3f29-4f12-bfc8-277d6b7bd5d8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fecf2d47-8106-4b39-97f5-2e929f8f327d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Lock"",
                    ""type"": ""Button"",
                    ""id"": ""21b3016b-d0e0-4e73-b412-85bf8697bc18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""a658003f-1ca2-4087-bfe2-28d26ed45660"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""W,A,S,D"",
                    ""id"": ""3b3be98d-8f78-4a5e-89ef-401172faad37"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""48b3036f-1bad-47bf-87e7-139a118b48d2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b7aed4ce-65a4-4d5e-97cf-8534cfa015c6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a429453d-6152-458a-9451-6b42eedf280c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""8544fecb-d79a-4a73-8341-c01d4e89a4da"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fe975137-980f-4922-91d1-3b10e688d45d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7587a9c-11c2-4d49-a477-b41c7443278e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f96fe2-e217-488f-bb81-fedfe7d40fd4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5d55db9-8a5f-49b4-a325-afe581ac6143"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Lock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf365fc6-6c7e-4c9d-b795-be48143ad80d"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Lock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e35d0f1-17f9-41f9-bb1a-7e93ee8f36fa"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d6a65d2-7164-493d-ab0e-6cb6c5eb49e5"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6930afe9-2c78-441f-8c05-9567581afb0b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7aee8bb4-4b69-413e-8b4d-681a016319ad"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Deafult Input"",
            ""id"": ""3c61260a-652c-4e06-a55f-44a76955e5e2"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""55a3365a-6fad-4acb-a396-f02d06b314ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""18a3c335-ae41-4b70-9945-38632badd2d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""13c70464-41e3-4b60-91b2-765426f03225"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""d7e3cb75-dec4-4cfb-b722-a81ab0148a55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""up"",
                    ""type"": ""Button"",
                    ""id"": ""81664ce8-d79b-435b-8a4e-da30dce5bb4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""down"",
                    ""type"": ""Button"",
                    ""id"": ""3faf3fb4-1754-4f24-9f2a-b25e9e77dd9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""type"": ""Button"",
                    ""id"": ""6dc2ed51-0738-4551-9b44-dfa5a775330b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Wasd"",
                    ""type"": ""Button"",
                    ""id"": ""19c07a62-d38a-45b2-9206-35fe3b38ea6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Options"",
                    ""type"": ""Button"",
                    ""id"": ""08f37835-0712-4385-9b7b-9669b2f1510f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e7b060cc-4192-41b3-bbeb-408a1863e2da"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""419d3682-9939-4d13-b921-cba994aa0593"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6958964-4833-417f-933a-b5dcd62711c9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42011bb1-9e08-4ed1-9dda-4d7ee5d1e30c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69f9f466-9fe4-4f21-bf15-4445cde05ee1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20f06665-1838-4550-8b95-5467c74c622a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8d5262f-daa2-466a-8178-488bc1911d54"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5220a9fc-75a3-4c49-bd1f-0d45d88b28ff"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""719ae018-83c3-4587-b4e5-10dab686116c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1f22c3b-9ec9-497a-8d18-199c17573c9d"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fc3c5b2-3f6b-4e34-a071-c5d21bf9205d"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4676c410-cfdf-41e5-b70d-4d06820e4aa7"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea5d6309-a122-47de-b562-6d0f026203bd"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b2e42d5-9279-4da3-9c53-8788150336b3"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a894a36-acbe-4ac7-9251-3a9e07bb48e9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wasd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""486a7f6e-b7de-445c-9608-f4882bfe89bb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wasd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2185539b-fcbc-42be-a13a-c3440d18f738"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wasd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0339731-e1c2-4e63-be10-87ac273530d2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wasd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07ac5dfe-1644-4a10-aa27-1689231ad6f8"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Options"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Deafult Movement
        m_DeafultMovement = asset.FindActionMap("Deafult Movement", throwIfNotFound: true);
        m_DeafultMovement_Movement = m_DeafultMovement.FindAction("Movement", throwIfNotFound: true);
        m_DeafultMovement_Rotation = m_DeafultMovement.FindAction("Rotation", throwIfNotFound: true);
        m_DeafultMovement_Jump = m_DeafultMovement.FindAction("Jump", throwIfNotFound: true);
        m_DeafultMovement_MouseLock = m_DeafultMovement.FindAction("Mouse Lock", throwIfNotFound: true);
        m_DeafultMovement_Sprint = m_DeafultMovement.FindAction("Sprint", throwIfNotFound: true);
        // Deafult Input
        m_DeafultInput = asset.FindActionMap("Deafult Input", throwIfNotFound: true);
        m_DeafultInput_Shoot = m_DeafultInput.FindAction("Shoot", throwIfNotFound: true);
        m_DeafultInput_Aim = m_DeafultInput.FindAction("Aim", throwIfNotFound: true);
        m_DeafultInput_Reload = m_DeafultInput.FindAction("Reload", throwIfNotFound: true);
        m_DeafultInput_Interact = m_DeafultInput.FindAction("Interact", throwIfNotFound: true);
        m_DeafultInput_up = m_DeafultInput.FindAction("up", throwIfNotFound: true);
        m_DeafultInput_down = m_DeafultInput.FindAction("down", throwIfNotFound: true);
        m_DeafultInput_Joystick = m_DeafultInput.FindAction("Joystick", throwIfNotFound: true);
        m_DeafultInput_Wasd = m_DeafultInput.FindAction("Wasd", throwIfNotFound: true);
        m_DeafultInput_Options = m_DeafultInput.FindAction("Options", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Deafult Movement
    private readonly InputActionMap m_DeafultMovement;
    private IDeafultMovementActions m_DeafultMovementActionsCallbackInterface;
    private readonly InputAction m_DeafultMovement_Movement;
    private readonly InputAction m_DeafultMovement_Rotation;
    private readonly InputAction m_DeafultMovement_Jump;
    private readonly InputAction m_DeafultMovement_MouseLock;
    private readonly InputAction m_DeafultMovement_Sprint;
    public struct DeafultMovementActions
    {
        private @PlayerControlls m_Wrapper;
        public DeafultMovementActions(@PlayerControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_DeafultMovement_Movement;
        public InputAction @Rotation => m_Wrapper.m_DeafultMovement_Rotation;
        public InputAction @Jump => m_Wrapper.m_DeafultMovement_Jump;
        public InputAction @MouseLock => m_Wrapper.m_DeafultMovement_MouseLock;
        public InputAction @Sprint => m_Wrapper.m_DeafultMovement_Sprint;
        public InputActionMap Get() { return m_Wrapper.m_DeafultMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DeafultMovementActions set) { return set.Get(); }
        public void SetCallbacks(IDeafultMovementActions instance)
        {
            if (m_Wrapper.m_DeafultMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMovement;
                @Rotation.started -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnRotation;
                @Jump.started -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnJump;
                @MouseLock.started -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMouseLock;
                @MouseLock.performed -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMouseLock;
                @MouseLock.canceled -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnMouseLock;
                @Sprint.started -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_DeafultMovementActionsCallbackInterface.OnSprint;
            }
            m_Wrapper.m_DeafultMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseLock.started += instance.OnMouseLock;
                @MouseLock.performed += instance.OnMouseLock;
                @MouseLock.canceled += instance.OnMouseLock;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
            }
        }
    }
    public DeafultMovementActions @DeafultMovement => new DeafultMovementActions(this);

    // Deafult Input
    private readonly InputActionMap m_DeafultInput;
    private IDeafultInputActions m_DeafultInputActionsCallbackInterface;
    private readonly InputAction m_DeafultInput_Shoot;
    private readonly InputAction m_DeafultInput_Aim;
    private readonly InputAction m_DeafultInput_Reload;
    private readonly InputAction m_DeafultInput_Interact;
    private readonly InputAction m_DeafultInput_up;
    private readonly InputAction m_DeafultInput_down;
    private readonly InputAction m_DeafultInput_Joystick;
    private readonly InputAction m_DeafultInput_Wasd;
    private readonly InputAction m_DeafultInput_Options;
    public struct DeafultInputActions
    {
        private @PlayerControlls m_Wrapper;
        public DeafultInputActions(@PlayerControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_DeafultInput_Shoot;
        public InputAction @Aim => m_Wrapper.m_DeafultInput_Aim;
        public InputAction @Reload => m_Wrapper.m_DeafultInput_Reload;
        public InputAction @Interact => m_Wrapper.m_DeafultInput_Interact;
        public InputAction @up => m_Wrapper.m_DeafultInput_up;
        public InputAction @down => m_Wrapper.m_DeafultInput_down;
        public InputAction @Joystick => m_Wrapper.m_DeafultInput_Joystick;
        public InputAction @Wasd => m_Wrapper.m_DeafultInput_Wasd;
        public InputAction @Options => m_Wrapper.m_DeafultInput_Options;
        public InputActionMap Get() { return m_Wrapper.m_DeafultInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DeafultInputActions set) { return set.Get(); }
        public void SetCallbacks(IDeafultInputActions instance)
        {
            if (m_Wrapper.m_DeafultInputActionsCallbackInterface != null)
            {
                @Shoot.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnShoot;
                @Aim.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnAim;
                @Reload.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnReload;
                @Interact.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnInteract;
                @up.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnUp;
                @up.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnUp;
                @up.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnUp;
                @down.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnDown;
                @down.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnDown;
                @down.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnDown;
                @Joystick.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnJoystick;
                @Joystick.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnJoystick;
                @Joystick.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnJoystick;
                @Wasd.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnWasd;
                @Wasd.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnWasd;
                @Wasd.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnWasd;
                @Options.started -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnOptions;
                @Options.performed -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnOptions;
                @Options.canceled -= m_Wrapper.m_DeafultInputActionsCallbackInterface.OnOptions;
            }
            m_Wrapper.m_DeafultInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @up.started += instance.OnUp;
                @up.performed += instance.OnUp;
                @up.canceled += instance.OnUp;
                @down.started += instance.OnDown;
                @down.performed += instance.OnDown;
                @down.canceled += instance.OnDown;
                @Joystick.started += instance.OnJoystick;
                @Joystick.performed += instance.OnJoystick;
                @Joystick.canceled += instance.OnJoystick;
                @Wasd.started += instance.OnWasd;
                @Wasd.performed += instance.OnWasd;
                @Wasd.canceled += instance.OnWasd;
                @Options.started += instance.OnOptions;
                @Options.performed += instance.OnOptions;
                @Options.canceled += instance.OnOptions;
            }
        }
    }
    public DeafultInputActions @DeafultInput => new DeafultInputActions(this);
    public interface IDeafultMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouseLock(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
    }
    public interface IDeafultInputActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnJoystick(InputAction.CallbackContext context);
        void OnWasd(InputAction.CallbackContext context);
        void OnOptions(InputAction.CallbackContext context);
    }
}
